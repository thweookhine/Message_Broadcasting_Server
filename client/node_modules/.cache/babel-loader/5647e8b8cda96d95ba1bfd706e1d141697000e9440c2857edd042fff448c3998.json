{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/roadmap-projects/broadcastserver/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = \"your_jwt_token\"; // Fetch from localStorage or context\n\nconst Dashboard = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [ws, setWs] = useState(null);\n  const socketRef = useRef(null);\n  const auth = useAuth();\n  useEffect(() => {\n    if (hasConnected.current) return;\n    hasConnected.current = true;\n\n    // Connect to WebSocket server\n    const socket = new WebSocket(`ws://localhost:8080?token=${auth.token}`);\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n    socket.onmessage = event => {\n      const newMessage = JSON.parse(event.data);\n      setMessages(prev => [...prev, newMessage]); // Add new message to state\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n    socket.onclose = event => {\n      console.log(\"Disconnected from WebSocket\");\n      console.warn(`WebSocket closed: ${event.code} - ${event.reason}`);\n    };\n    setWs(socket);\n\n    // // Fetch all messages from backend API\n    // axios.get(\"http://localhost:3000/api/messages/\")\n    //     .then((response) => {\n    //         setMessages(response.data);\n    //     })\n    //     .catch((error) => console.error(\"Error fetching messages:\", error));\n\n    return () => {\n      if (socket.readyState === 1) {\n        // <-- This is important\n        socket.close();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (ws && inputMessage.trim()) {\n      ws.send(JSON.stringify({\n        content: inputMessage\n      }));\n      setInputMessage(\"\"); // Clear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => {\n        var _msg$sender;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || \"Unknown\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputMessage,\n      onChange: e => setInputMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"QZms01NZ8s4CgZ9QEtNW8Zr4HmM=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","useAuth","jsxDEV","_jsxDEV","token","Dashboard","_s","messages","setMessages","inputMessage","setInputMessage","ws","setWs","socketRef","auth","hasConnected","current","socket","WebSocket","onopen","console","log","onmessage","event","newMessage","JSON","parse","data","prev","onerror","error","onclose","warn","code","reason","readyState","close","sendMessage","trim","send","stringify","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","_msg$sender","sender","username","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/asus/Documents/roadmap-projects/broadcastserver/frontend/src/components/Dashboard.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthProvider\";\n\nconst token = \"your_jwt_token\"; // Fetch from localStorage or context\n\nconst Dashboard = () => {\n    const [messages, setMessages] = useState([]);\n    const [inputMessage, setInputMessage] = useState(\"\");\n    const [ws, setWs] = useState(null);\n    const socketRef = useRef(null);\n    const auth = useAuth();\n\n    useEffect(() => {\n\n        if (hasConnected.current) return;\n        hasConnected.current = true;\n\n        // Connect to WebSocket server\n        const socket = new WebSocket(`ws://localhost:8080?token=${auth.token}`);\n\n        socket.onopen = () => {\n            console.log(\"Connected to WebSocket server\");\n        };\n\n        socket.onmessage = (event) => {\n            const newMessage = JSON.parse(event.data);\n            setMessages((prev) => [...prev, newMessage]); // Add new message to state\n        };\n\n        socket.onerror = (error) => {\n          console.error(\"WebSocket error:\", error);\n      };\n\n      \n        socket.onclose = (event) => {\n            console.log(\"Disconnected from WebSocket\");\n            console.warn(`WebSocket closed: ${event.code} - ${event.reason}`);\n\n        };\n\n        setWs(socket);\n\n        // // Fetch all messages from backend API\n        // axios.get(\"http://localhost:3000/api/messages/\")\n        //     .then((response) => {\n        //         setMessages(response.data);\n        //     })\n        //     .catch((error) => console.error(\"Error fetching messages:\", error));\n\n        return () => {\n            if (socket.readyState === 1) { // <-- This is important\n                socket.close();\n            }\n        }\n    }, []);\n\n    const sendMessage = () => {\n        if (ws && inputMessage.trim()) {\n            ws.send(JSON.stringify({ content: inputMessage }));\n            setInputMessage(\"\"); // Clear input after sending\n        }\n    };\n\n    return (\n        <div>\n            <h2>Chat Dashboard</h2>\n            <ul>\n                {messages.map((msg, index) => (\n                    <li key={index}>\n                        <strong>{msg.sender?.username || \"Unknown\"}:</strong> {msg.content}\n                    </li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                placeholder=\"Type a message...\"\n            />\n            <button onClick={sendMessage}>Send</button>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}